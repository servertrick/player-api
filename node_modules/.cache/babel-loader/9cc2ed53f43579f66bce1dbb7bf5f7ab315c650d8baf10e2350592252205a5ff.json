{"ast":null,"code":"import { css } from 'styled-components';\nimport { colorIsDark, getRGBA, normalizeColor, canExtractRGBArray, getRGBArray } from './colors';\n\n// evalStyle() converts a styled-components item into a string\nvar evalStyle = function evalStyle(arg, theme) {\n  if (arg && Array.isArray(arg) && typeof arg[0] === 'function') {\n    return arg[0]({\n      theme: theme\n    });\n  }\n  return arg;\n};\nexport var normalizeBackground = function normalizeBackground(backgroundArg, theme) {\n  var _theme$global$backgro;\n  var background = ((_theme$global$backgro = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro[backgroundArg]) || backgroundArg;\n  var result = background;\n  // If the background has a light or dark object, use that\n  if (background) {\n    if (theme.dark && background.dark && typeof background.dark !== 'boolean') {\n      result = background.dark;\n    } else if (!theme.dark && background.light && typeof background.light !== 'boolean') {\n      result = background.light;\n    }\n    result = evalStyle(result, theme);\n  }\n  return result;\n};\nvar normalizeBackgroundColor = function normalizeBackgroundColor(backgroundArg, theme) {\n  var _theme$global$backgro2;\n  var background = backgroundArg.color || backgroundArg;\n  var result = normalizeColor(\n  // Background color may be defined by theme.global.backgrounds or\n  // theme.global.colors.\n  ((_theme$global$backgro2 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro2[background]) || background, theme, backgroundArg.dark);\n  return result;\n};\nvar _normalizeBackgroundImage = function normalizeBackgroundImage(background, theme) {\n  var result;\n  if (background.image) {\n    var _theme$global$backgro3, _theme$global$backgro4;\n    result = normalizeBackground(background.dark ? (_theme$global$backgro3 = theme.global.backgrounds) == null || (_theme$global$backgro3 = _theme$global$backgro3[background.image]) == null ? void 0 : _theme$global$backgro3.dark : (_theme$global$backgro4 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro4[background.image], theme) || background.image;\n  } else {\n    var _theme$global$backgro5;\n    var normalized = normalizeBackground((_theme$global$backgro5 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro5[background], theme);\n    result = typeof normalized === 'object' ? _normalizeBackgroundImage(normalized, theme) : normalized;\n  }\n  return result;\n};\nvar rotateBackground = function rotateBackground(background, theme) {\n  var backgroundImage = _normalizeBackgroundImage(background, theme);\n  var result = backgroundImage;\n  if (backgroundImage.lastIndexOf('linear-gradient', 0) === 0) {\n    var regex = /\\d{1,}deg\\b,/gm; // Contains rotation specified in degrees. Only targets 'deg' string with a trailing comma. Do not match 'deg' string for hsl, etc..\n    result = backgroundImage.lastIndexOf('deg,') >= 0 ? backgroundImage.replace(regex, background.rotate + \"deg,\") : backgroundImage.replace('linear-gradient(', \"linear-gradient(\" + background.rotate + \"deg, \");\n  } else {\n    console.warn(\n    // eslint-disable-next-line max-len\n    \"'background.rotate' property only supports 'background.image' containing a linear-gradient string.\");\n  }\n  return result;\n};\nexport var backgroundIsDark = function backgroundIsDark(backgroundArg, theme) {\n  var background = normalizeBackground(backgroundArg, theme);\n  var result;\n  if (background) {\n    if (typeof background === 'object') {\n      var color = background.color,\n        dark = background.dark,\n        opacity = background.opacity;\n      if (typeof dark === 'boolean') {\n        result = dark;\n      } else if (color && (\n      // weak opacity means we keep the existing darkness\n      !opacity || opacity !== 'weak')) {\n        var backgroundColor = normalizeColor(background.color, theme);\n        if (backgroundColor) {\n          result = colorIsDark(backgroundColor);\n        }\n      }\n    } else {\n      var _color = normalizeColor(background, theme);\n      if (_color) {\n        result = colorIsDark(_color);\n      }\n    }\n  }\n  return result;\n};\nvar darkContext = function darkContext(backgroundColor) {\n  var isDark = colorIsDark(backgroundColor);\n  if (isDark === undefined) return undefined;\n  return isDark ? 'dark' : 'light';\n};\n\n// Returns an array of two CSS colors: [background, color]\n// Either could be undefined.\n// background could be a CSS gradient, like \"linear-gradient(...)\"\nexport var backgroundAndTextColors = function backgroundAndTextColors(backgroundArg, textArg, theme) {\n  if (!backgroundArg) return [undefined, textArg];\n  var global = theme.global;\n  var background = normalizeBackground(backgroundArg, theme);\n  var text = textArg || global.colors.text;\n  var backgroundColor;\n  var textColor;\n  if (typeof background === 'object') {\n    if (background.dark === false) {\n      textColor = text.light || text;\n    } else if (background.dark) {\n      textColor = text.dark || text;\n    }\n    if (background.color) {\n      var color = normalizeBackgroundColor(background, theme);\n      var opacity = background.opacity === true ? global.opacity.medium : global.opacity[background.opacity] || background.opacity;\n      backgroundColor = getRGBA(color, opacity) || color;\n\n      // If we don't have a textColor already, and we aren't too translucent,\n      // set the textColor to have the best contrast against the background\n      // color.\n      if (!textColor && (opacity === undefined || opacity > 0.3)) {\n        var shade = darkContext(backgroundColor, theme);\n        textColor = normalizeColor(shade && text[shade] || text, theme);\n      }\n    }\n  } else {\n    backgroundColor = normalizeBackgroundColor(background, theme);\n    var _shade = darkContext(backgroundColor, theme);\n    var transparent;\n    if (backgroundColor && canExtractRGBArray(backgroundColor)) {\n      var colorArray = getRGBArray(backgroundColor);\n      // check if the alpha value is less than 0.5\n      if (colorArray[3] < 0.5) transparent = true;\n    }\n    if (_shade) {\n      textColor = normalizeColor(text[_shade] || text, theme, _shade === 'dark');\n    } else if (transparent && text) {\n      textColor = normalizeColor(text, theme);\n    } else {\n      // If we can't determine the shade, we assume this isn't a simple color.\n      // It could be a gradient. backgroundStyle() will take care of that case.\n      if (backgroundColor !== 'transparent') backgroundColor = undefined;\n      if (text) textColor = normalizeColor(text, theme);\n    }\n  }\n  // if textArg is false, we don't want the textColor, used for Button hover\n  if (textArg === false) textColor = undefined;\n  return [backgroundColor, textColor];\n};\nexport var backgroundStyle = function backgroundStyle(backgroundArg, theme, textColorArg) {\n  // for Grommet component, if the background isn't defined, don't set it\n  if (backgroundArg === undefined) return undefined;\n  var background = normalizeBackground(backgroundArg, theme);\n  var _backgroundAndTextCol = backgroundAndTextColors(background, textColorArg, theme),\n    backgroundColor = _backgroundAndTextCol[0],\n    textColor = _backgroundAndTextCol[1];\n  var backgroundImage = background.rotate ? rotateBackground(background, theme) : _normalizeBackgroundImage(background, theme);\n  var backgroundClipStyle = '';\n  if (background.clip) {\n    backgroundClipStyle = background.clip === 'text' ? \"-webkit-text-fill-color: transparent; \\n           -webkit-background-clip: text; \\n           background-clip: text;\" : \"background-clip: \" + background.clip + \";\";\n  }\n  if (typeof background === 'string' && background.lastIndexOf('url', 0) === 0) {\n    return css([\"background:\", \" no-repeat center center;background-size:cover;\"], background);\n  }\n  if (backgroundImage) {\n    var backgroundStyles = \"\\n      \" + (backgroundColor ? \"background-color: \" + backgroundColor + \";\" : '') + \"\\n      background-image: \" + backgroundImage + \";\\n      background-repeat: \" + (typeof background === 'object' && background.repeat || 'no-repeat') + \";\\n      background-position: \" + (background.position || 'center center') + \";\\n      background-size: \" + (background.size || 'cover') + \";\\n      \" + backgroundClipStyle + \"\\n    \";\n\n    // allow both background color and image, in case the image doesn't fill\n    // when image and opacity are used together, we need to use pseudo :before\n    // to ensure that only image and background color are affected by opacity\n    // but not the container contents\n    return css([\"\", \" \", \"\"], textColor ? \"color: \" + textColor + \";\" : '', !background.opacity ? backgroundStyles : \"position: relative;\\n        z-index: 0;\\n        &:before {\\n          content: '';\\n          position: absolute;\\n          top: 0;\\n          right: 0;\\n          left: 0;\\n          bottom: 0;\\n          z-index: -1;\\n          border-radius: inherit;\\n          \" + backgroundStyles + \"\\n          opacity: \" + (background.opacity === true ? theme.global.opacity.medium : theme.global.opacity[background.opacity] || background.opacity) + \";\\n        }\");\n  }\n  if (backgroundColor) {\n    return css([\"background-color:\", \";\", \"\"], backgroundColor, textColor ? \"color: \" + textColor + \";\" : '');\n  }\n  if (typeof background === 'string')\n    // This case takes care of gradients\n    // or theme colors that use CSS names like 'crimson' that we don't parse\n    return css([\"background:\", \";\"], normalizeColor(background, theme));\n  return undefined;\n};\nexport var activeStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.active.background, props.theme), props.theme, props.theme.global.active.color);\n});\nexport var selectedStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.selected.background, props.theme), props.theme, props.theme.global.selected.color);\n});\nexport var getHoverIndicatorStyle = function getHoverIndicatorStyle(hoverIndicator, theme) {\n  var background;\n  var elevation;\n  if (hoverIndicator === true || hoverIndicator === 'background') {\n    background = theme.global.hover.background;\n  } else if (typeof hoverIndicator === 'object') {\n    if (hoverIndicator.elevation || hoverIndicator.background) {\n      elevation = hoverIndicator.elevation;\n      background = hoverIndicator.background;\n    } else background = hoverIndicator;\n  } else {\n    background = hoverIndicator;\n  }\n  return css([\"\", \" \", \"\"], backgroundStyle(background, theme, theme.global.hover.color), elevation && \"box-shadow: \" + theme.global.elevation[theme.dark ? 'dark' : 'light'][elevation] + \";\");\n};","map":{"version":3,"names":["css","colorIsDark","getRGBA","normalizeColor","canExtractRGBArray","getRGBArray","evalStyle","arg","theme","Array","isArray","normalizeBackground","backgroundArg","_theme$global$backgro","background","global","backgrounds","result","dark","light","normalizeBackgroundColor","_theme$global$backgro2","color","_normalizeBackgroundImage","normalizeBackgroundImage","image","_theme$global$backgro3","_theme$global$backgro4","_theme$global$backgro5","normalized","rotateBackground","backgroundImage","lastIndexOf","regex","replace","rotate","console","warn","backgroundIsDark","opacity","backgroundColor","_color","darkContext","isDark","undefined","backgroundAndTextColors","textArg","text","colors","textColor","medium","shade","_shade","transparent","colorArray","backgroundStyle","textColorArg","_backgroundAndTextCol","backgroundClipStyle","clip","backgroundStyles","repeat","position","size","activeStyle","props","active","selectedStyle","selected","getHoverIndicatorStyle","hoverIndicator","elevation","hover"],"sources":["C:/Users/michaejo/Documents/GitRepos/player-api/node_modules/grommet/es6/utils/background.js"],"sourcesContent":["import { css } from 'styled-components';\nimport { colorIsDark, getRGBA, normalizeColor, canExtractRGBArray, getRGBArray } from './colors';\n\n// evalStyle() converts a styled-components item into a string\nvar evalStyle = function evalStyle(arg, theme) {\n  if (arg && Array.isArray(arg) && typeof arg[0] === 'function') {\n    return arg[0]({\n      theme: theme\n    });\n  }\n  return arg;\n};\nexport var normalizeBackground = function normalizeBackground(backgroundArg, theme) {\n  var _theme$global$backgro;\n  var background = ((_theme$global$backgro = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro[backgroundArg]) || backgroundArg;\n  var result = background;\n  // If the background has a light or dark object, use that\n  if (background) {\n    if (theme.dark && background.dark && typeof background.dark !== 'boolean') {\n      result = background.dark;\n    } else if (!theme.dark && background.light && typeof background.light !== 'boolean') {\n      result = background.light;\n    }\n    result = evalStyle(result, theme);\n  }\n  return result;\n};\nvar normalizeBackgroundColor = function normalizeBackgroundColor(backgroundArg, theme) {\n  var _theme$global$backgro2;\n  var background = backgroundArg.color || backgroundArg;\n  var result = normalizeColor(\n  // Background color may be defined by theme.global.backgrounds or\n  // theme.global.colors.\n  ((_theme$global$backgro2 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro2[background]) || background, theme, backgroundArg.dark);\n  return result;\n};\nvar _normalizeBackgroundImage = function normalizeBackgroundImage(background, theme) {\n  var result;\n  if (background.image) {\n    var _theme$global$backgro3, _theme$global$backgro4;\n    result = normalizeBackground(background.dark ? (_theme$global$backgro3 = theme.global.backgrounds) == null || (_theme$global$backgro3 = _theme$global$backgro3[background.image]) == null ? void 0 : _theme$global$backgro3.dark : (_theme$global$backgro4 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro4[background.image], theme) || background.image;\n  } else {\n    var _theme$global$backgro5;\n    var normalized = normalizeBackground((_theme$global$backgro5 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro5[background], theme);\n    result = typeof normalized === 'object' ? _normalizeBackgroundImage(normalized, theme) : normalized;\n  }\n  return result;\n};\nvar rotateBackground = function rotateBackground(background, theme) {\n  var backgroundImage = _normalizeBackgroundImage(background, theme);\n  var result = backgroundImage;\n  if (backgroundImage.lastIndexOf('linear-gradient', 0) === 0) {\n    var regex = /\\d{1,}deg\\b,/gm; // Contains rotation specified in degrees. Only targets 'deg' string with a trailing comma. Do not match 'deg' string for hsl, etc..\n    result = backgroundImage.lastIndexOf('deg,') >= 0 ? backgroundImage.replace(regex, background.rotate + \"deg,\") : backgroundImage.replace('linear-gradient(', \"linear-gradient(\" + background.rotate + \"deg, \");\n  } else {\n    console.warn(// eslint-disable-next-line max-len\n    \"'background.rotate' property only supports 'background.image' containing a linear-gradient string.\");\n  }\n  return result;\n};\nexport var backgroundIsDark = function backgroundIsDark(backgroundArg, theme) {\n  var background = normalizeBackground(backgroundArg, theme);\n  var result;\n  if (background) {\n    if (typeof background === 'object') {\n      var color = background.color,\n        dark = background.dark,\n        opacity = background.opacity;\n      if (typeof dark === 'boolean') {\n        result = dark;\n      } else if (color && (\n      // weak opacity means we keep the existing darkness\n      !opacity || opacity !== 'weak')) {\n        var backgroundColor = normalizeColor(background.color, theme);\n        if (backgroundColor) {\n          result = colorIsDark(backgroundColor);\n        }\n      }\n    } else {\n      var _color = normalizeColor(background, theme);\n      if (_color) {\n        result = colorIsDark(_color);\n      }\n    }\n  }\n  return result;\n};\nvar darkContext = function darkContext(backgroundColor) {\n  var isDark = colorIsDark(backgroundColor);\n  if (isDark === undefined) return undefined;\n  return isDark ? 'dark' : 'light';\n};\n\n// Returns an array of two CSS colors: [background, color]\n// Either could be undefined.\n// background could be a CSS gradient, like \"linear-gradient(...)\"\nexport var backgroundAndTextColors = function backgroundAndTextColors(backgroundArg, textArg, theme) {\n  if (!backgroundArg) return [undefined, textArg];\n  var global = theme.global;\n  var background = normalizeBackground(backgroundArg, theme);\n  var text = textArg || global.colors.text;\n  var backgroundColor;\n  var textColor;\n  if (typeof background === 'object') {\n    if (background.dark === false) {\n      textColor = text.light || text;\n    } else if (background.dark) {\n      textColor = text.dark || text;\n    }\n    if (background.color) {\n      var color = normalizeBackgroundColor(background, theme);\n      var opacity = background.opacity === true ? global.opacity.medium : global.opacity[background.opacity] || background.opacity;\n      backgroundColor = getRGBA(color, opacity) || color;\n\n      // If we don't have a textColor already, and we aren't too translucent,\n      // set the textColor to have the best contrast against the background\n      // color.\n      if (!textColor && (opacity === undefined || opacity > 0.3)) {\n        var shade = darkContext(backgroundColor, theme);\n        textColor = normalizeColor(shade && text[shade] || text, theme);\n      }\n    }\n  } else {\n    backgroundColor = normalizeBackgroundColor(background, theme);\n    var _shade = darkContext(backgroundColor, theme);\n    var transparent;\n    if (backgroundColor && canExtractRGBArray(backgroundColor)) {\n      var colorArray = getRGBArray(backgroundColor);\n      // check if the alpha value is less than 0.5\n      if (colorArray[3] < 0.5) transparent = true;\n    }\n    if (_shade) {\n      textColor = normalizeColor(text[_shade] || text, theme, _shade === 'dark');\n    } else if (transparent && text) {\n      textColor = normalizeColor(text, theme);\n    } else {\n      // If we can't determine the shade, we assume this isn't a simple color.\n      // It could be a gradient. backgroundStyle() will take care of that case.\n      if (backgroundColor !== 'transparent') backgroundColor = undefined;\n      if (text) textColor = normalizeColor(text, theme);\n    }\n  }\n  // if textArg is false, we don't want the textColor, used for Button hover\n  if (textArg === false) textColor = undefined;\n  return [backgroundColor, textColor];\n};\nexport var backgroundStyle = function backgroundStyle(backgroundArg, theme, textColorArg) {\n  // for Grommet component, if the background isn't defined, don't set it\n  if (backgroundArg === undefined) return undefined;\n  var background = normalizeBackground(backgroundArg, theme);\n  var _backgroundAndTextCol = backgroundAndTextColors(background, textColorArg, theme),\n    backgroundColor = _backgroundAndTextCol[0],\n    textColor = _backgroundAndTextCol[1];\n  var backgroundImage = background.rotate ? rotateBackground(background, theme) : _normalizeBackgroundImage(background, theme);\n  var backgroundClipStyle = '';\n  if (background.clip) {\n    backgroundClipStyle = background.clip === 'text' ? \"-webkit-text-fill-color: transparent; \\n           -webkit-background-clip: text; \\n           background-clip: text;\" : \"background-clip: \" + background.clip + \";\";\n  }\n  if (typeof background === 'string' && background.lastIndexOf('url', 0) === 0) {\n    return css([\"background:\", \" no-repeat center center;background-size:cover;\"], background);\n  }\n  if (backgroundImage) {\n    var backgroundStyles = \"\\n      \" + (backgroundColor ? \"background-color: \" + backgroundColor + \";\" : '') + \"\\n      background-image: \" + backgroundImage + \";\\n      background-repeat: \" + (typeof background === 'object' && background.repeat || 'no-repeat') + \";\\n      background-position: \" + (background.position || 'center center') + \";\\n      background-size: \" + (background.size || 'cover') + \";\\n      \" + backgroundClipStyle + \"\\n    \";\n\n    // allow both background color and image, in case the image doesn't fill\n    // when image and opacity are used together, we need to use pseudo :before\n    // to ensure that only image and background color are affected by opacity\n    // but not the container contents\n    return css([\"\", \" \", \"\"], textColor ? \"color: \" + textColor + \";\" : '', !background.opacity ? backgroundStyles : \"position: relative;\\n        z-index: 0;\\n        &:before {\\n          content: '';\\n          position: absolute;\\n          top: 0;\\n          right: 0;\\n          left: 0;\\n          bottom: 0;\\n          z-index: -1;\\n          border-radius: inherit;\\n          \" + backgroundStyles + \"\\n          opacity: \" + (background.opacity === true ? theme.global.opacity.medium : theme.global.opacity[background.opacity] || background.opacity) + \";\\n        }\");\n  }\n  if (backgroundColor) {\n    return css([\"background-color:\", \";\", \"\"], backgroundColor, textColor ? \"color: \" + textColor + \";\" : '');\n  }\n  if (typeof background === 'string')\n    // This case takes care of gradients\n    // or theme colors that use CSS names like 'crimson' that we don't parse\n    return css([\"background:\", \";\"], normalizeColor(background, theme));\n  return undefined;\n};\nexport var activeStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.active.background, props.theme), props.theme, props.theme.global.active.color);\n});\nexport var selectedStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.selected.background, props.theme), props.theme, props.theme.global.selected.color);\n});\nexport var getHoverIndicatorStyle = function getHoverIndicatorStyle(hoverIndicator, theme) {\n  var background;\n  var elevation;\n  if (hoverIndicator === true || hoverIndicator === 'background') {\n    background = theme.global.hover.background;\n  } else if (typeof hoverIndicator === 'object') {\n    if (hoverIndicator.elevation || hoverIndicator.background) {\n      elevation = hoverIndicator.elevation;\n      background = hoverIndicator.background;\n    } else background = hoverIndicator;\n  } else {\n    background = hoverIndicator;\n  }\n  return css([\"\", \" \", \"\"], backgroundStyle(background, theme, theme.global.hover.color), elevation && \"box-shadow: \" + theme.global.elevation[theme.dark ? 'dark' : 'light'][elevation] + \";\");\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}