{"ast":null,"code":"var _excluded = [\"a11yTitle\", \"defaultSuggestion\", \"defaultValue\", \"disabled\", \"dropAlign\", \"dropHeight\", \"dropTarget\", \"dropProps\", \"focusIndicator\", \"icon\", \"id\", \"messages\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onSelect\", \"onSuggestionSelect\", \"onSuggestionsClose\", \"onSuggestionsOpen\", \"placeholder\", \"plain\", \"readOnly\", \"readOnlyCopy\", \"reverse\", \"suggestions\", \"textAlign\", \"value\", \"width\"];\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Drop } from '../Drop';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { Keyboard } from '../Keyboard';\nimport { FormContext } from '../Form/FormContext';\nimport { AnnounceContext } from '../../contexts';\nimport { isNodeAfterScroll, isNodeBeforeScroll, sizeStyle, useForwardedRef, useSizedIcon } from '../../utils';\nimport { StyledTextInput, StyledTextInputContainer, StyledPlaceholder, StyledIcon, StyledSuggestions } from './StyledTextInput';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { TextInputPropTypes } from './propTypes';\nimport { CopyButton } from './CopyButton';\nimport { useThemeValue } from '../../utils/useThemeValue';\nvar renderLabel = function renderLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    return suggestion.label || suggestion.value;\n  }\n  return suggestion;\n};\nvar stringLabel = function stringLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    if (suggestion.label && typeof suggestion.label === 'string') {\n      return suggestion.label;\n    }\n    return suggestion.value;\n  }\n  return suggestion;\n};\nvar ContainerBox = styled(Box).withConfig({\n  displayName: \"TextInput__ContainerBox\",\n  componentId: \"sc-1ai0c08-0\"\n})([\"\", \";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}\"], function (props) {\n  return props.dropHeight ? sizeStyle('max-height', props.dropHeight, props.theme) : 'max-height: inherit;';\n});\nvar defaultDropAlign = {\n  top: 'bottom',\n  left: 'left'\n};\nvar TextInput = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _inputRef$current, _inputRef$current2;\n  var a11yTitle = _ref.a11yTitle,\n    defaultSuggestion = _ref.defaultSuggestion,\n    defaultValue = _ref.defaultValue,\n    disabled = _ref.disabled,\n    _ref$dropAlign = _ref.dropAlign,\n    dropAlign = _ref$dropAlign === void 0 ? defaultDropAlign : _ref$dropAlign,\n    dropHeight = _ref.dropHeight,\n    dropTarget = _ref.dropTarget,\n    dropProps = _ref.dropProps,\n    _ref$focusIndicator = _ref.focusIndicator,\n    focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator,\n    icon = _ref.icon,\n    id = _ref.id,\n    messages = _ref.messages,\n    name = _ref.name,\n    _onBlur = _ref.onBlur,\n    onChange = _ref.onChange,\n    _onFocus = _ref.onFocus,\n    onKeyDown = _ref.onKeyDown,\n    onSelect = _ref.onSelect,\n    onSuggestionSelect = _ref.onSuggestionSelect,\n    onSuggestionsClose = _ref.onSuggestionsClose,\n    onSuggestionsOpen = _ref.onSuggestionsOpen,\n    placeholder = _ref.placeholder,\n    plain = _ref.plain,\n    readOnlyProp = _ref.readOnly,\n    readOnlyCopy = _ref.readOnlyCopy,\n    reverse = _ref.reverse,\n    suggestions = _ref.suggestions,\n    textAlign = _ref.textAlign,\n    valueProp = _ref.value,\n    widthProp = _ref.width,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var _useThemeValue = useThemeValue(),\n    theme = _useThemeValue.theme,\n    passThemeFlag = _useThemeValue.passThemeFlag;\n  var _useContext = useContext(MessageContext),\n    format = _useContext.format;\n  var announce = useContext(AnnounceContext);\n  var formContext = useContext(FormContext);\n  var inputRef = useForwardedRef(ref);\n  var dropRef = useRef();\n  var suggestionsRef = useRef();\n  var readOnly = readOnlyProp || readOnlyCopy;\n  // if this is a readOnly property, don't set a name with the form context\n  // this allows Select to control the form context for the name.\n  var _formContext$useFormI = formContext.useFormInput({\n      name: readOnly ? undefined : name,\n      value: valueProp\n    }),\n    value = _formContext$useFormI[0],\n    setValue = _formContext$useFormI[1];\n  var _useState = useState(),\n    focus = _useState[0],\n    setFocus = _useState[1];\n  var _useState2 = useState(false),\n    showDrop = _useState2[0],\n    setShowDrop = _useState2[1];\n  var handleSuggestionSelect = useMemo(function () {\n    return onSelect && !onSuggestionSelect ? onSelect : onSuggestionSelect;\n  }, [onSelect, onSuggestionSelect]);\n  var handleTextSelect = useMemo(function () {\n    return onSelect && onSuggestionSelect ? onSelect : undefined;\n  }, [onSelect, onSuggestionSelect]);\n  var _useState3 = useState(),\n    suggestionsAtClose = _useState3[0],\n    setSuggestionsAtClose = _useState3[1];\n  var readOnlyCopyValidation = format({\n    id: 'input.readOnlyCopy.validation',\n    messages: messages\n  });\n  var readOnlyCopyPrompt = format({\n    id: 'input.readOnlyCopy.prompt',\n    messages: messages\n  });\n  var _useState4 = useState(readOnlyCopyPrompt),\n    tip = _useState4[0],\n    setTip = _useState4[1];\n  var onClickCopy = function onClickCopy() {\n    global.navigator.clipboard.writeText(value);\n    announce(readOnlyCopyValidation, 'assertive');\n    setTip(readOnlyCopyValidation);\n  };\n  var onBlurCopy = function onBlurCopy() {\n    if (tip === readOnlyCopyValidation) setTip(readOnlyCopyPrompt);\n  };\n  var openDrop = useCallback(function () {\n    setShowDrop(true);\n    announce(format({\n      id: 'textInput.suggestionIsOpen',\n      messages: messages\n    }));\n    announce(suggestions.length + \" \" + format({\n      id: 'textInput.suggestionsCount',\n      messages: messages\n    }));\n    if (onSuggestionsOpen) onSuggestionsOpen();\n  }, [announce, messages, format, onSuggestionsOpen, suggestions]);\n  var closeDrop = useCallback(function () {\n    setSuggestionsAtClose(suggestions); // must be before closing drop\n    setShowDrop(false);\n    if (onSuggestionsClose) onSuggestionsClose();\n  }, [onSuggestionsClose, suggestions]);\n  var clickOutside = useCallback(function (event) {\n    if (event.target !== inputRef.current) closeDrop();\n  }, [inputRef, closeDrop]);\n\n  // Handle scenarios where we have focus, the drop isn't showing,\n  // and the suggestions change. We don't want to open the drop if\n  // the drop has been closed by onEsc and the suggestions haven't\n  // changed. So, we remember the suggestions we are showing when\n  // the drop was closed and only re-open it when the suggestions\n  // subsequently change.\n  useEffect(function () {\n    if (focus && !showDrop && suggestions && suggestions.length && (!suggestionsAtClose || suggestionsAtClose.length !== suggestions.length)) {\n      openDrop();\n    }\n  }, [focus, openDrop, showDrop, suggestions, suggestionsAtClose]);\n\n  // if we have no suggestions, close drop if it's open\n  useEffect(function () {\n    if (showDrop && (!suggestions || !suggestions.length)) {\n      closeDrop();\n    }\n  }, [closeDrop, showDrop, suggestions]);\n  var valueSuggestionIndex = useMemo(function () {\n    return suggestions ? suggestions.map(function (suggestion) {\n      return typeof suggestion === 'object' ? suggestion.value : suggestion;\n    }).indexOf(value) : -1;\n  }, [suggestions, value]);\n\n  // choose the best suggestion, either the explicit default or the one\n  // that matches the current value\n  var resetSuggestionIndex = useMemo(function () {\n    if (valueSuggestionIndex === -1 && typeof defaultSuggestion === 'number') {\n      return defaultSuggestion;\n    }\n    return valueSuggestionIndex;\n  }, [defaultSuggestion, valueSuggestionIndex]);\n\n  // activeSuggestionIndex unifies mouse and keyboard interaction of\n  // the suggestions\n  var _useState5 = useState(resetSuggestionIndex),\n    activeSuggestionIndex = _useState5[0],\n    setActiveSuggestionIndex = _useState5[1];\n\n  // Only update active suggestion index when the mouse actually moves,\n  // not when suggestions are moving under the mouse.\n  var _useState6 = useState(),\n    mouseMovedSinceLastKey = _useState6[0],\n    setMouseMovedSinceLastKey = _useState6[1];\n\n  // set activeSuggestionIndex when value changes\n  useEffect(function () {\n    return setActiveSuggestionIndex(valueSuggestionIndex);\n  }, [valueSuggestionIndex]);\n\n  // reset activeSuggestionIndex when the drop is closed\n  useEffect(function () {\n    if (!showDrop) setActiveSuggestionIndex(resetSuggestionIndex);\n  }, [resetSuggestionIndex, showDrop]);\n\n  // announce active suggestion\n  useEffect(function () {\n    if (activeSuggestionIndex >= 0) {\n      var label = stringLabel(suggestions[activeSuggestionIndex]);\n      announce(label + \" \" + format({\n        id: 'textInput.enterSelect',\n        messages: messages\n      }));\n    }\n  }, [activeSuggestionIndex, announce, messages, format, suggestions]);\n\n  // make sure activeSuggestion is visible in scroll\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      var list = suggestionsRef.current;\n      if (showDrop && activeSuggestionIndex !== -1 && list) {\n        var container = list.parentNode;\n        var item = list.children[activeSuggestionIndex];\n        if (container.scrollTo) {\n          if (isNodeAfterScroll(item, container)) container.scrollTo(0, item.offsetTop - (container.getBoundingClientRect().height - item.getBoundingClientRect().height));else if (isNodeBeforeScroll(item, container)) container.scrollTo(0, item.offsetTop);\n        }\n      }\n    }, 50); // delay to allow Drop to animate in\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [activeSuggestionIndex, showDrop]);\n  useEffect(function () {\n    if (readOnly && inputRef != null && inputRef.current && inputRef.current.scrollLeft > 0) {\n      inputRef.current.scrollLeft = 0;\n    }\n  }, [readOnly, inputRef, inputRef == null || (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.scrollLeft]);\n  var setValueFromSuggestion = function setValueFromSuggestion(event, suggestion) {\n    // if we stole the focus in the drop, perhaps by interacting with\n    // a suggestion button or the scrollbar, give it back\n    inputRef.current.focus();\n    inputRef.current.value = suggestion; // needed for uncontrolled cases\n    closeDrop();\n    if (handleSuggestionSelect) {\n      if (event.persist) event.persist();\n      var adjustedEvent = event;\n      adjustedEvent.suggestion = suggestion;\n      handleSuggestionSelect(adjustedEvent);\n    }\n    setValue(suggestion);\n  };\n  var onNextSuggestion = useCallback(function (event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);\n    setActiveSuggestionIndex(nextActiveIndex);\n    setMouseMovedSinceLastKey(false);\n  }, [activeSuggestionIndex, suggestions]);\n  var onPreviousSuggestion = useCallback(function (event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);\n    setActiveSuggestionIndex(nextActiveIndex);\n    setMouseMovedSinceLastKey(false);\n  }, [activeSuggestionIndex]);\n\n  // account for input value in both controlled and uncontrolled scenarios\n  var hasValue = value || ((_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.value);\n  var showStyledPlaceholder = useMemo(function () {\n    return placeholder && typeof placeholder !== 'string' && !hasValue;\n  }, [hasValue, placeholder]);\n  var drop;\n  var extraProps = {\n    onSelect: handleTextSelect\n  };\n  if (showDrop) {\n    drop = /*#__PURE__*/React.createElement(Drop, _extends({\n      ref: dropRef,\n      id: id ? \"text-input-drop__\" + id : undefined,\n      align: dropAlign,\n      responsive: false,\n      target: dropTarget || inputRef.current,\n      onClickOutside: clickOutside,\n      onEsc: closeDrop\n      // TextInput manages its own keyboard behavior via keyboardProps\n      ,\n\n      trapFocus: false\n    }, dropProps), /*#__PURE__*/React.createElement(ContainerBox, _extends({\n      id: id ? \"listbox__\" + id : undefined,\n      role: \"listbox\",\n      overflow: \"auto\",\n      dropHeight: dropHeight,\n      onMouseMove: function onMouseMove() {\n        return setMouseMovedSinceLastKey(true);\n      }\n    }, passThemeFlag), /*#__PURE__*/React.createElement(StyledSuggestions, _extends({\n      ref: suggestionsRef\n    }, passThemeFlag), /*#__PURE__*/React.createElement(InfiniteScroll, {\n      items: suggestions,\n      step: theme.select.step,\n      show: activeSuggestionIndex !== -1 ? activeSuggestionIndex : undefined\n    }, function (suggestion, index, itemRef) {\n      var active = activeSuggestionIndex === index;\n      var selected = suggestion === value;\n      // Determine whether the label is done as a child or\n      // as an option Button kind property.\n      var renderedLabel = renderLabel(suggestion);\n      var child;\n      if (typeof renderedLabel !== 'string')\n        // must be an element rendered by suggestions.label\n        child = renderedLabel;else if (!theme.button.option)\n        // don't have theme support, need to layout here\n        /*\n        Not adding a theme object now because this code path\n        is not used in the HPE theme, but we may add theme\n        support here in the future.\n        */\n        child = /*#__PURE__*/React.createElement(Box, {\n          align: \"start\",\n          pad: \"small\"\n        }, renderedLabel);\n      // if we have a child, turn on plain\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: stringLabel(suggestion) + \"-\" + index,\n        ref: itemRef\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: id ? \"listbox-option-\" + index + \"__\" + id : undefined,\n        role: \"option\",\n        \"aria-selected\": selected ? 'true' : 'false',\n        active: active,\n        fill: \"horizontal\",\n        plain: !child ? undefined : true,\n        align: \"start\",\n        kind: !child ? 'option' : undefined,\n        label: !child ? renderedLabel : undefined,\n        onClick: function onClick(event) {\n          return setValueFromSuggestion(event, suggestion);\n        },\n        onMouseMove: mouseMovedSinceLastKey && activeSuggestionIndex !== index ? function () {\n          return setActiveSuggestionIndex(index);\n        } : undefined,\n        keyboard: !mouseMovedSinceLastKey\n      }, child));\n    }))));\n  }\n  var keyboardProps = {\n    onKeyDown: onKeyDown\n  };\n  if (showDrop) {\n    keyboardProps.onEnter = function (event) {\n      // prevent submitting forms via Enter when the drop is open\n      event.preventDefault();\n      if (activeSuggestionIndex >= 0) setValueFromSuggestion(event, suggestions[activeSuggestionIndex]);else closeDrop();\n    };\n    if (activeSuggestionIndex > 0) keyboardProps.onUp = onPreviousSuggestion;\n    if (activeSuggestionIndex < suggestions.length - 1) keyboardProps.onDown = onNextSuggestion;\n    keyboardProps.onTab = closeDrop;\n  } else if (suggestions && suggestions.length > 0) {\n    keyboardProps.onDown = openDrop;\n  }\n\n  /*\n  If the text input has a list of suggestions, add the WAI-ARIA 1.2\n  combobox role and states.\n  */\n  var comboboxProps = {};\n  var activeOptionID;\n  if (id && (suggestions == null ? void 0 : suggestions.length) > -1) {\n    if (showDrop && activeSuggestionIndex > -1) {\n      activeOptionID = \"listbox-option-\" + activeSuggestionIndex + \"__\" + id;\n    }\n    comboboxProps = {\n      'aria-activedescendant': activeOptionID,\n      'aria-autocomplete': 'list',\n      'aria-expanded': showDrop ? 'true' : 'false',\n      'aria-controls': showDrop ? \"listbox__\" + id : undefined,\n      role: 'combobox'\n    };\n  }\n  // For the Keyboard target below, if we have focus,\n  // either on the input element or within the drop,\n  // then we set the target to the document,\n  // otherwise we only listen to onDown on the input element itself,\n  // primarily for tests.\n\n  var textInputIcon = useSizedIcon(icon, rest.size, theme);\n  var ReadOnlyCopyButton = /*#__PURE__*/React.createElement(CopyButton, {\n    disabled: disabled,\n    onBlurCopy: onBlurCopy,\n    onClickCopy: onClickCopy,\n    readOnlyCopyPrompt: readOnlyCopyPrompt,\n    tip: tip,\n    value: value\n  });\n  return /*#__PURE__*/React.createElement(StyledTextInputContainer, _extends({\n    readOnlyProp: readOnly // readOnlyProp to avoid passing to DOM\n    ,\n\n    readOnlyCopy: readOnlyCopy,\n    plain: plain,\n    border: !plain,\n    onMouseMove: function onMouseMove() {\n      return setMouseMovedSinceLastKey(true);\n    }\n  }, passThemeFlag), reverse && readOnlyCopy && ReadOnlyCopyButton, showStyledPlaceholder && /*#__PURE__*/React.createElement(StyledPlaceholder, passThemeFlag, placeholder), textInputIcon && !readOnly && /*#__PURE__*/React.createElement(StyledIcon, {\n    reverse: reverse,\n    theme: theme\n  }, textInputIcon), /*#__PURE__*/React.createElement(Keyboard, _extends({\n    target: focus ? 'document' : undefined\n  }, keyboardProps), /*#__PURE__*/React.createElement(StyledTextInput, _extends({\n    \"aria-label\": a11yTitle,\n    ref: inputRef,\n    id: id,\n    name: name,\n    autoComplete: \"off\",\n    disabled: disabled,\n    plain: plain,\n    placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n    icon: !readOnly && icon,\n    reverse: reverse,\n    focus: focus,\n    focusIndicator: focusIndicator,\n    textAlign: textAlign,\n    widthProp: widthProp\n  }, passThemeFlag, rest, extraProps, comboboxProps, {\n    defaultValue: renderLabel(defaultValue),\n    value: renderLabel(value),\n    readOnly: readOnly,\n    readOnlyCopy: readOnlyCopy,\n    onFocus: function onFocus(event) {\n      // Don't do anything if we are acting like we already have\n      // focus. This can happen when this input loses focus temporarily\n      // to our drop, see onBlur() handler below.\n      if (!focus) {\n        setFocus(true);\n        if (suggestions && suggestions.length > 0) {\n          announce(format({\n            id: 'textInput.suggestionsExist',\n            messages: messages\n          }));\n          openDrop();\n        }\n        if (_onFocus) _onFocus(event);\n      }\n    },\n    onBlur: function onBlur(event) {\n      // Only treat it as a blur if the element receiving focus\n      // isn't in our drop. The relatedTarget will be our drop\n      // when the user clicks on a suggestion or interacts with the\n      // scrollbar in the drop.\n      if (!event.relatedTarget || event.relatedTarget !== dropRef.current) {\n        setFocus(false);\n        if (_onBlur) _onBlur(event);\n      }\n    },\n    onChange: readOnly ? undefined : function (event) {\n      // when TextInput is not contained in a Form, no re-render\n      // will come from this onChange and remove the placeholder\n      // so we need to update state to ensure the styled\n      // placeholder only appears when there is no value\n      if (suggestions && focus && !showDrop) {\n        openDrop();\n      }\n      setValue(event.target.value);\n      setActiveSuggestionIndex(resetSuggestionIndex);\n      if (onChange) onChange(event);\n    }\n  }))), !reverse && readOnlyCopy && ReadOnlyCopyButton, !readOnly && drop);\n});\nTextInput.displayName = 'TextInput';\nTextInput.propTypes = TextInputPropTypes;\nexport { TextInput };","map":{"version":3,"names":["_excluded","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","indexOf","React","forwardRef","useCallback","useContext","useEffect","useMemo","useRef","useState","styled","Box","Button","Drop","InfiniteScroll","Keyboard","FormContext","AnnounceContext","isNodeAfterScroll","isNodeBeforeScroll","sizeStyle","useForwardedRef","useSizedIcon","StyledTextInput","StyledTextInputContainer","StyledPlaceholder","StyledIcon","StyledSuggestions","MessageContext","TextInputPropTypes","CopyButton","useThemeValue","renderLabel","suggestion","label","value","stringLabel","ContainerBox","withConfig","displayName","componentId","props","dropHeight","theme","defaultDropAlign","top","left","TextInput","_ref","ref","_inputRef$current","_inputRef$current2","a11yTitle","defaultSuggestion","defaultValue","disabled","_ref$dropAlign","dropAlign","dropTarget","dropProps","_ref$focusIndicator","focusIndicator","icon","id","messages","name","_onBlur","onBlur","onChange","_onFocus","onFocus","onKeyDown","onSelect","onSuggestionSelect","onSuggestionsClose","onSuggestionsOpen","placeholder","plain","readOnlyProp","readOnly","readOnlyCopy","reverse","suggestions","textAlign","valueProp","widthProp","width","rest","_useThemeValue","passThemeFlag","_useContext","format","announce","formContext","inputRef","dropRef","suggestionsRef","_formContext$useFormI","useFormInput","undefined","setValue","_useState","focus","setFocus","_useState2","showDrop","setShowDrop","handleSuggestionSelect","handleTextSelect","_useState3","suggestionsAtClose","setSuggestionsAtClose","readOnlyCopyValidation","readOnlyCopyPrompt","_useState4","tip","setTip","onClickCopy","global","navigator","clipboard","writeText","onBlurCopy","openDrop","closeDrop","clickOutside","event","target","current","valueSuggestionIndex","map","resetSuggestionIndex","_useState5","activeSuggestionIndex","setActiveSuggestionIndex","_useState6","mouseMovedSinceLastKey","setMouseMovedSinceLastKey","timer","setTimeout","list","container","parentNode","item","children","scrollTo","offsetTop","getBoundingClientRect","height","clearTimeout","scrollLeft","setValueFromSuggestion","persist","adjustedEvent","onNextSuggestion","preventDefault","nextActiveIndex","Math","min","onPreviousSuggestion","max","hasValue","showStyledPlaceholder","drop","extraProps","createElement","align","responsive","onClickOutside","onEsc","trapFocus","role","overflow","onMouseMove","items","step","select","show","index","itemRef","active","selected","renderedLabel","child","button","option","pad","key","fill","kind","onClick","keyboard","keyboardProps","onEnter","onUp","onDown","onTab","comboboxProps","activeOptionID","textInputIcon","size","ReadOnlyCopyButton","border","autoComplete","relatedTarget","propTypes"],"sources":["C:/Users/michaejo/Documents/GitRepos/player-api/node_modules/grommet/es6/components/TextInput/TextInput.js"],"sourcesContent":["var _excluded = [\"a11yTitle\", \"defaultSuggestion\", \"defaultValue\", \"disabled\", \"dropAlign\", \"dropHeight\", \"dropTarget\", \"dropProps\", \"focusIndicator\", \"icon\", \"id\", \"messages\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onSelect\", \"onSuggestionSelect\", \"onSuggestionsClose\", \"onSuggestionsOpen\", \"placeholder\", \"plain\", \"readOnly\", \"readOnlyCopy\", \"reverse\", \"suggestions\", \"textAlign\", \"value\", \"width\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Drop } from '../Drop';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { Keyboard } from '../Keyboard';\nimport { FormContext } from '../Form/FormContext';\nimport { AnnounceContext } from '../../contexts';\nimport { isNodeAfterScroll, isNodeBeforeScroll, sizeStyle, useForwardedRef, useSizedIcon } from '../../utils';\nimport { StyledTextInput, StyledTextInputContainer, StyledPlaceholder, StyledIcon, StyledSuggestions } from './StyledTextInput';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { TextInputPropTypes } from './propTypes';\nimport { CopyButton } from './CopyButton';\nimport { useThemeValue } from '../../utils/useThemeValue';\nvar renderLabel = function renderLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    return suggestion.label || suggestion.value;\n  }\n  return suggestion;\n};\nvar stringLabel = function stringLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    if (suggestion.label && typeof suggestion.label === 'string') {\n      return suggestion.label;\n    }\n    return suggestion.value;\n  }\n  return suggestion;\n};\nvar ContainerBox = styled(Box).withConfig({\n  displayName: \"TextInput__ContainerBox\",\n  componentId: \"sc-1ai0c08-0\"\n})([\"\", \";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}\"], function (props) {\n  return props.dropHeight ? sizeStyle('max-height', props.dropHeight, props.theme) : 'max-height: inherit;';\n});\nvar defaultDropAlign = {\n  top: 'bottom',\n  left: 'left'\n};\nvar TextInput = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _inputRef$current, _inputRef$current2;\n  var a11yTitle = _ref.a11yTitle,\n    defaultSuggestion = _ref.defaultSuggestion,\n    defaultValue = _ref.defaultValue,\n    disabled = _ref.disabled,\n    _ref$dropAlign = _ref.dropAlign,\n    dropAlign = _ref$dropAlign === void 0 ? defaultDropAlign : _ref$dropAlign,\n    dropHeight = _ref.dropHeight,\n    dropTarget = _ref.dropTarget,\n    dropProps = _ref.dropProps,\n    _ref$focusIndicator = _ref.focusIndicator,\n    focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator,\n    icon = _ref.icon,\n    id = _ref.id,\n    messages = _ref.messages,\n    name = _ref.name,\n    _onBlur = _ref.onBlur,\n    onChange = _ref.onChange,\n    _onFocus = _ref.onFocus,\n    onKeyDown = _ref.onKeyDown,\n    onSelect = _ref.onSelect,\n    onSuggestionSelect = _ref.onSuggestionSelect,\n    onSuggestionsClose = _ref.onSuggestionsClose,\n    onSuggestionsOpen = _ref.onSuggestionsOpen,\n    placeholder = _ref.placeholder,\n    plain = _ref.plain,\n    readOnlyProp = _ref.readOnly,\n    readOnlyCopy = _ref.readOnlyCopy,\n    reverse = _ref.reverse,\n    suggestions = _ref.suggestions,\n    textAlign = _ref.textAlign,\n    valueProp = _ref.value,\n    widthProp = _ref.width,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var _useThemeValue = useThemeValue(),\n    theme = _useThemeValue.theme,\n    passThemeFlag = _useThemeValue.passThemeFlag;\n  var _useContext = useContext(MessageContext),\n    format = _useContext.format;\n  var announce = useContext(AnnounceContext);\n  var formContext = useContext(FormContext);\n  var inputRef = useForwardedRef(ref);\n  var dropRef = useRef();\n  var suggestionsRef = useRef();\n  var readOnly = readOnlyProp || readOnlyCopy;\n  // if this is a readOnly property, don't set a name with the form context\n  // this allows Select to control the form context for the name.\n  var _formContext$useFormI = formContext.useFormInput({\n      name: readOnly ? undefined : name,\n      value: valueProp\n    }),\n    value = _formContext$useFormI[0],\n    setValue = _formContext$useFormI[1];\n  var _useState = useState(),\n    focus = _useState[0],\n    setFocus = _useState[1];\n  var _useState2 = useState(false),\n    showDrop = _useState2[0],\n    setShowDrop = _useState2[1];\n  var handleSuggestionSelect = useMemo(function () {\n    return onSelect && !onSuggestionSelect ? onSelect : onSuggestionSelect;\n  }, [onSelect, onSuggestionSelect]);\n  var handleTextSelect = useMemo(function () {\n    return onSelect && onSuggestionSelect ? onSelect : undefined;\n  }, [onSelect, onSuggestionSelect]);\n  var _useState3 = useState(),\n    suggestionsAtClose = _useState3[0],\n    setSuggestionsAtClose = _useState3[1];\n  var readOnlyCopyValidation = format({\n    id: 'input.readOnlyCopy.validation',\n    messages: messages\n  });\n  var readOnlyCopyPrompt = format({\n    id: 'input.readOnlyCopy.prompt',\n    messages: messages\n  });\n  var _useState4 = useState(readOnlyCopyPrompt),\n    tip = _useState4[0],\n    setTip = _useState4[1];\n  var onClickCopy = function onClickCopy() {\n    global.navigator.clipboard.writeText(value);\n    announce(readOnlyCopyValidation, 'assertive');\n    setTip(readOnlyCopyValidation);\n  };\n  var onBlurCopy = function onBlurCopy() {\n    if (tip === readOnlyCopyValidation) setTip(readOnlyCopyPrompt);\n  };\n  var openDrop = useCallback(function () {\n    setShowDrop(true);\n    announce(format({\n      id: 'textInput.suggestionIsOpen',\n      messages: messages\n    }));\n    announce(suggestions.length + \" \" + format({\n      id: 'textInput.suggestionsCount',\n      messages: messages\n    }));\n    if (onSuggestionsOpen) onSuggestionsOpen();\n  }, [announce, messages, format, onSuggestionsOpen, suggestions]);\n  var closeDrop = useCallback(function () {\n    setSuggestionsAtClose(suggestions); // must be before closing drop\n    setShowDrop(false);\n    if (onSuggestionsClose) onSuggestionsClose();\n  }, [onSuggestionsClose, suggestions]);\n  var clickOutside = useCallback(function (event) {\n    if (event.target !== inputRef.current) closeDrop();\n  }, [inputRef, closeDrop]);\n\n  // Handle scenarios where we have focus, the drop isn't showing,\n  // and the suggestions change. We don't want to open the drop if\n  // the drop has been closed by onEsc and the suggestions haven't\n  // changed. So, we remember the suggestions we are showing when\n  // the drop was closed and only re-open it when the suggestions\n  // subsequently change.\n  useEffect(function () {\n    if (focus && !showDrop && suggestions && suggestions.length && (!suggestionsAtClose || suggestionsAtClose.length !== suggestions.length)) {\n      openDrop();\n    }\n  }, [focus, openDrop, showDrop, suggestions, suggestionsAtClose]);\n\n  // if we have no suggestions, close drop if it's open\n  useEffect(function () {\n    if (showDrop && (!suggestions || !suggestions.length)) {\n      closeDrop();\n    }\n  }, [closeDrop, showDrop, suggestions]);\n  var valueSuggestionIndex = useMemo(function () {\n    return suggestions ? suggestions.map(function (suggestion) {\n      return typeof suggestion === 'object' ? suggestion.value : suggestion;\n    }).indexOf(value) : -1;\n  }, [suggestions, value]);\n\n  // choose the best suggestion, either the explicit default or the one\n  // that matches the current value\n  var resetSuggestionIndex = useMemo(function () {\n    if (valueSuggestionIndex === -1 && typeof defaultSuggestion === 'number') {\n      return defaultSuggestion;\n    }\n    return valueSuggestionIndex;\n  }, [defaultSuggestion, valueSuggestionIndex]);\n\n  // activeSuggestionIndex unifies mouse and keyboard interaction of\n  // the suggestions\n  var _useState5 = useState(resetSuggestionIndex),\n    activeSuggestionIndex = _useState5[0],\n    setActiveSuggestionIndex = _useState5[1];\n\n  // Only update active suggestion index when the mouse actually moves,\n  // not when suggestions are moving under the mouse.\n  var _useState6 = useState(),\n    mouseMovedSinceLastKey = _useState6[0],\n    setMouseMovedSinceLastKey = _useState6[1];\n\n  // set activeSuggestionIndex when value changes\n  useEffect(function () {\n    return setActiveSuggestionIndex(valueSuggestionIndex);\n  }, [valueSuggestionIndex]);\n\n  // reset activeSuggestionIndex when the drop is closed\n  useEffect(function () {\n    if (!showDrop) setActiveSuggestionIndex(resetSuggestionIndex);\n  }, [resetSuggestionIndex, showDrop]);\n\n  // announce active suggestion\n  useEffect(function () {\n    if (activeSuggestionIndex >= 0) {\n      var label = stringLabel(suggestions[activeSuggestionIndex]);\n      announce(label + \" \" + format({\n        id: 'textInput.enterSelect',\n        messages: messages\n      }));\n    }\n  }, [activeSuggestionIndex, announce, messages, format, suggestions]);\n\n  // make sure activeSuggestion is visible in scroll\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      var list = suggestionsRef.current;\n      if (showDrop && activeSuggestionIndex !== -1 && list) {\n        var container = list.parentNode;\n        var item = list.children[activeSuggestionIndex];\n        if (container.scrollTo) {\n          if (isNodeAfterScroll(item, container)) container.scrollTo(0, item.offsetTop - (container.getBoundingClientRect().height - item.getBoundingClientRect().height));else if (isNodeBeforeScroll(item, container)) container.scrollTo(0, item.offsetTop);\n        }\n      }\n    }, 50); // delay to allow Drop to animate in\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [activeSuggestionIndex, showDrop]);\n  useEffect(function () {\n    if (readOnly && inputRef != null && inputRef.current && inputRef.current.scrollLeft > 0) {\n      inputRef.current.scrollLeft = 0;\n    }\n  }, [readOnly, inputRef, inputRef == null || (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.scrollLeft]);\n  var setValueFromSuggestion = function setValueFromSuggestion(event, suggestion) {\n    // if we stole the focus in the drop, perhaps by interacting with\n    // a suggestion button or the scrollbar, give it back\n    inputRef.current.focus();\n    inputRef.current.value = suggestion; // needed for uncontrolled cases\n    closeDrop();\n    if (handleSuggestionSelect) {\n      if (event.persist) event.persist();\n      var adjustedEvent = event;\n      adjustedEvent.suggestion = suggestion;\n      handleSuggestionSelect(adjustedEvent);\n    }\n    setValue(suggestion);\n  };\n  var onNextSuggestion = useCallback(function (event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);\n    setActiveSuggestionIndex(nextActiveIndex);\n    setMouseMovedSinceLastKey(false);\n  }, [activeSuggestionIndex, suggestions]);\n  var onPreviousSuggestion = useCallback(function (event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);\n    setActiveSuggestionIndex(nextActiveIndex);\n    setMouseMovedSinceLastKey(false);\n  }, [activeSuggestionIndex]);\n\n  // account for input value in both controlled and uncontrolled scenarios\n  var hasValue = value || ((_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.value);\n  var showStyledPlaceholder = useMemo(function () {\n    return placeholder && typeof placeholder !== 'string' && !hasValue;\n  }, [hasValue, placeholder]);\n  var drop;\n  var extraProps = {\n    onSelect: handleTextSelect\n  };\n  if (showDrop) {\n    drop = /*#__PURE__*/React.createElement(Drop, _extends({\n      ref: dropRef,\n      id: id ? \"text-input-drop__\" + id : undefined,\n      align: dropAlign,\n      responsive: false,\n      target: dropTarget || inputRef.current,\n      onClickOutside: clickOutside,\n      onEsc: closeDrop\n      // TextInput manages its own keyboard behavior via keyboardProps\n      ,\n      trapFocus: false\n    }, dropProps), /*#__PURE__*/React.createElement(ContainerBox, _extends({\n      id: id ? \"listbox__\" + id : undefined,\n      role: \"listbox\",\n      overflow: \"auto\",\n      dropHeight: dropHeight,\n      onMouseMove: function onMouseMove() {\n        return setMouseMovedSinceLastKey(true);\n      }\n    }, passThemeFlag), /*#__PURE__*/React.createElement(StyledSuggestions, _extends({\n      ref: suggestionsRef\n    }, passThemeFlag), /*#__PURE__*/React.createElement(InfiniteScroll, {\n      items: suggestions,\n      step: theme.select.step,\n      show: activeSuggestionIndex !== -1 ? activeSuggestionIndex : undefined\n    }, function (suggestion, index, itemRef) {\n      var active = activeSuggestionIndex === index;\n      var selected = suggestion === value;\n      // Determine whether the label is done as a child or\n      // as an option Button kind property.\n      var renderedLabel = renderLabel(suggestion);\n      var child;\n      if (typeof renderedLabel !== 'string')\n        // must be an element rendered by suggestions.label\n        child = renderedLabel;else if (!theme.button.option)\n        // don't have theme support, need to layout here\n        /*\n        Not adding a theme object now because this code path\n        is not used in the HPE theme, but we may add theme\n        support here in the future.\n        */\n        child = /*#__PURE__*/React.createElement(Box, {\n          align: \"start\",\n          pad: \"small\"\n        }, renderedLabel);\n      // if we have a child, turn on plain\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: stringLabel(suggestion) + \"-\" + index,\n        ref: itemRef\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: id ? \"listbox-option-\" + index + \"__\" + id : undefined,\n        role: \"option\",\n        \"aria-selected\": selected ? 'true' : 'false',\n        active: active,\n        fill: \"horizontal\",\n        plain: !child ? undefined : true,\n        align: \"start\",\n        kind: !child ? 'option' : undefined,\n        label: !child ? renderedLabel : undefined,\n        onClick: function onClick(event) {\n          return setValueFromSuggestion(event, suggestion);\n        },\n        onMouseMove: mouseMovedSinceLastKey && activeSuggestionIndex !== index ? function () {\n          return setActiveSuggestionIndex(index);\n        } : undefined,\n        keyboard: !mouseMovedSinceLastKey\n      }, child));\n    }))));\n  }\n  var keyboardProps = {\n    onKeyDown: onKeyDown\n  };\n  if (showDrop) {\n    keyboardProps.onEnter = function (event) {\n      // prevent submitting forms via Enter when the drop is open\n      event.preventDefault();\n      if (activeSuggestionIndex >= 0) setValueFromSuggestion(event, suggestions[activeSuggestionIndex]);else closeDrop();\n    };\n    if (activeSuggestionIndex > 0) keyboardProps.onUp = onPreviousSuggestion;\n    if (activeSuggestionIndex < suggestions.length - 1) keyboardProps.onDown = onNextSuggestion;\n    keyboardProps.onTab = closeDrop;\n  } else if (suggestions && suggestions.length > 0) {\n    keyboardProps.onDown = openDrop;\n  }\n\n  /*\n  If the text input has a list of suggestions, add the WAI-ARIA 1.2\n  combobox role and states.\n  */\n  var comboboxProps = {};\n  var activeOptionID;\n  if (id && (suggestions == null ? void 0 : suggestions.length) > -1) {\n    if (showDrop && activeSuggestionIndex > -1) {\n      activeOptionID = \"listbox-option-\" + activeSuggestionIndex + \"__\" + id;\n    }\n    comboboxProps = {\n      'aria-activedescendant': activeOptionID,\n      'aria-autocomplete': 'list',\n      'aria-expanded': showDrop ? 'true' : 'false',\n      'aria-controls': showDrop ? \"listbox__\" + id : undefined,\n      role: 'combobox'\n    };\n  }\n  // For the Keyboard target below, if we have focus,\n  // either on the input element or within the drop,\n  // then we set the target to the document,\n  // otherwise we only listen to onDown on the input element itself,\n  // primarily for tests.\n\n  var textInputIcon = useSizedIcon(icon, rest.size, theme);\n  var ReadOnlyCopyButton = /*#__PURE__*/React.createElement(CopyButton, {\n    disabled: disabled,\n    onBlurCopy: onBlurCopy,\n    onClickCopy: onClickCopy,\n    readOnlyCopyPrompt: readOnlyCopyPrompt,\n    tip: tip,\n    value: value\n  });\n  return /*#__PURE__*/React.createElement(StyledTextInputContainer, _extends({\n    readOnlyProp: readOnly // readOnlyProp to avoid passing to DOM\n    ,\n    readOnlyCopy: readOnlyCopy,\n    plain: plain,\n    border: !plain,\n    onMouseMove: function onMouseMove() {\n      return setMouseMovedSinceLastKey(true);\n    }\n  }, passThemeFlag), reverse && readOnlyCopy && ReadOnlyCopyButton, showStyledPlaceholder && /*#__PURE__*/React.createElement(StyledPlaceholder, passThemeFlag, placeholder), textInputIcon && !readOnly && /*#__PURE__*/React.createElement(StyledIcon, {\n    reverse: reverse,\n    theme: theme\n  }, textInputIcon), /*#__PURE__*/React.createElement(Keyboard, _extends({\n    target: focus ? 'document' : undefined\n  }, keyboardProps), /*#__PURE__*/React.createElement(StyledTextInput, _extends({\n    \"aria-label\": a11yTitle,\n    ref: inputRef,\n    id: id,\n    name: name,\n    autoComplete: \"off\",\n    disabled: disabled,\n    plain: plain,\n    placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n    icon: !readOnly && icon,\n    reverse: reverse,\n    focus: focus,\n    focusIndicator: focusIndicator,\n    textAlign: textAlign,\n    widthProp: widthProp\n  }, passThemeFlag, rest, extraProps, comboboxProps, {\n    defaultValue: renderLabel(defaultValue),\n    value: renderLabel(value),\n    readOnly: readOnly,\n    readOnlyCopy: readOnlyCopy,\n    onFocus: function onFocus(event) {\n      // Don't do anything if we are acting like we already have\n      // focus. This can happen when this input loses focus temporarily\n      // to our drop, see onBlur() handler below.\n      if (!focus) {\n        setFocus(true);\n        if (suggestions && suggestions.length > 0) {\n          announce(format({\n            id: 'textInput.suggestionsExist',\n            messages: messages\n          }));\n          openDrop();\n        }\n        if (_onFocus) _onFocus(event);\n      }\n    },\n    onBlur: function onBlur(event) {\n      // Only treat it as a blur if the element receiving focus\n      // isn't in our drop. The relatedTarget will be our drop\n      // when the user clicks on a suggestion or interacts with the\n      // scrollbar in the drop.\n      if (!event.relatedTarget || event.relatedTarget !== dropRef.current) {\n        setFocus(false);\n        if (_onBlur) _onBlur(event);\n      }\n    },\n    onChange: readOnly ? undefined : function (event) {\n      // when TextInput is not contained in a Form, no re-render\n      // will come from this onChange and remove the placeholder\n      // so we need to update state to ensure the styled\n      // placeholder only appears when there is no value\n      if (suggestions && focus && !showDrop) {\n        openDrop();\n      }\n      setValue(event.target.value);\n      setActiveSuggestionIndex(resetSuggestionIndex);\n      if (onChange) onChange(event);\n    }\n  }))), !reverse && readOnlyCopy && ReadOnlyCopyButton, !readOnly && drop);\n});\nTextInput.displayName = 'TextInput';\nTextInput.propTypes = TextInputPropTypes;\nexport { TextInput };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}