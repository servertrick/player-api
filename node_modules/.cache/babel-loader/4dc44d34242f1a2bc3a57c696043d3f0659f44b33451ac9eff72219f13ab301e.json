{"ast":null,"code":"import React from 'react';\nimport defaultMessages from '../../languages/default.json';\n\n// options:\n//   id: message id\n//   messages: (optional) an object of message overrides\n//   values: (optional) currently unused but in the future\n//     will be an object with substitution values for\n//     positional variables in the message text.\n//   defaultMessage: (optional) default message to use if\n//     the message isn't found elsewhere.\nvar _format = function format(options, messages) {\n  var _options$id;\n  // Message id's are hierarchical. For the component-specific\n  // message objects passed as options.messages, just use the last\n  // component in the id for backwards compatibility.\n  //\n  // For overall messages passed to grommet, use the hierarchical\n  // id. For that messages object, the messages are in an object\n  // hierarchy by component, similar to how the theme works.\n  //\n  // Applications that typically keep their messages in flat\n  // objects with a single key string per message can override\n  // this format function to get the grommet messages from\n  // their bundles that way and don't need to pass the messages\n  // themselves in this property, just the format function.\n  var idParts = ((_options$id = options.id) == null ? void 0 : _options$id.split('.')) || [];\n  // eslint-disable-next-line no-unsafe-optional-chaining\n  var baseId = idParts[(idParts == null ? void 0 : idParts.length) - 1];\n  var messageObj = messages;\n  idParts.forEach(function (idPart) {\n    if (typeof messageObj === 'object') {\n      messageObj = messageObj[idPart];\n    }\n  });\n  var message = (options.messages ? options.messages[baseId] : undefined) || messageObj || options.defaultMessage;\n  var values = options.values;\n  var newMessage = message;\n  var tokens = message == null ? void 0 : message.match(/\\{(.+?)\\}/g);\n  tokens == null || tokens.forEach(function (token) {\n    var names = token.substr(1, token.length - 2);\n    var value = values[names];\n    newMessage = newMessage.replace(token, value);\n  });\n  return values ? newMessage : message;\n};\nexport { _format as format };\nvar defaultValue = {\n  messages: defaultMessages,\n  format: function format(options) {\n    return _format(options, defaultMessages);\n  }\n};\nexport var MessageContext = /*#__PURE__*/React.createContext(defaultValue);","map":{"version":3,"names":["React","defaultMessages","_format","format","options","messages","_options$id","idParts","id","split","baseId","length","messageObj","forEach","idPart","message","undefined","defaultMessage","values","newMessage","tokens","match","token","names","substr","value","replace","defaultValue","MessageContext","createContext"],"sources":["C:/Users/michaejo/Documents/GitRepos/player-api/node_modules/grommet/es6/contexts/MessageContext/MessageContext.js"],"sourcesContent":["import React from 'react';\nimport defaultMessages from '../../languages/default.json';\n\n// options:\n//   id: message id\n//   messages: (optional) an object of message overrides\n//   values: (optional) currently unused but in the future\n//     will be an object with substitution values for\n//     positional variables in the message text.\n//   defaultMessage: (optional) default message to use if\n//     the message isn't found elsewhere.\nvar _format = function format(options, messages) {\n  var _options$id;\n  // Message id's are hierarchical. For the component-specific\n  // message objects passed as options.messages, just use the last\n  // component in the id for backwards compatibility.\n  //\n  // For overall messages passed to grommet, use the hierarchical\n  // id. For that messages object, the messages are in an object\n  // hierarchy by component, similar to how the theme works.\n  //\n  // Applications that typically keep their messages in flat\n  // objects with a single key string per message can override\n  // this format function to get the grommet messages from\n  // their bundles that way and don't need to pass the messages\n  // themselves in this property, just the format function.\n  var idParts = ((_options$id = options.id) == null ? void 0 : _options$id.split('.')) || [];\n  // eslint-disable-next-line no-unsafe-optional-chaining\n  var baseId = idParts[(idParts == null ? void 0 : idParts.length) - 1];\n  var messageObj = messages;\n  idParts.forEach(function (idPart) {\n    if (typeof messageObj === 'object') {\n      messageObj = messageObj[idPart];\n    }\n  });\n  var message = (options.messages ? options.messages[baseId] : undefined) || messageObj || options.defaultMessage;\n  var values = options.values;\n  var newMessage = message;\n  var tokens = message == null ? void 0 : message.match(/\\{(.+?)\\}/g);\n  tokens == null || tokens.forEach(function (token) {\n    var names = token.substr(1, token.length - 2);\n    var value = values[names];\n    newMessage = newMessage.replace(token, value);\n  });\n  return values ? newMessage : message;\n};\nexport { _format as format };\nvar defaultValue = {\n  messages: defaultMessages,\n  format: function format(options) {\n    return _format(options, defaultMessages);\n  }\n};\nexport var MessageContext = /*#__PURE__*/React.createContext(defaultValue);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,8BAA8B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAG,SAASC,MAAMA,CAACC,OAAO,EAAEC,QAAQ,EAAE;EAC/C,IAAIC,WAAW;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIC,OAAO,GAAG,CAAC,CAACD,WAAW,GAAGF,OAAO,CAACI,EAAE,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE;EAC1F;EACA,IAAIC,MAAM,GAAGH,OAAO,CAAC,CAACA,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,MAAM,IAAI,CAAC,CAAC;EACrE,IAAIC,UAAU,GAAGP,QAAQ;EACzBE,OAAO,CAACM,OAAO,CAAC,UAAUC,MAAM,EAAE;IAChC,IAAI,OAAOF,UAAU,KAAK,QAAQ,EAAE;MAClCA,UAAU,GAAGA,UAAU,CAACE,MAAM,CAAC;IACjC;EACF,CAAC,CAAC;EACF,IAAIC,OAAO,GAAG,CAACX,OAAO,CAACC,QAAQ,GAAGD,OAAO,CAACC,QAAQ,CAACK,MAAM,CAAC,GAAGM,SAAS,KAAKJ,UAAU,IAAIR,OAAO,CAACa,cAAc;EAC/G,IAAIC,MAAM,GAAGd,OAAO,CAACc,MAAM;EAC3B,IAAIC,UAAU,GAAGJ,OAAO;EACxB,IAAIK,MAAM,GAAGL,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,KAAK,CAAC,YAAY,CAAC;EACnED,MAAM,IAAI,IAAI,IAAIA,MAAM,CAACP,OAAO,CAAC,UAAUS,KAAK,EAAE;IAChD,IAAIC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAAC,CAAC,EAAEF,KAAK,CAACX,MAAM,GAAG,CAAC,CAAC;IAC7C,IAAIc,KAAK,GAAGP,MAAM,CAACK,KAAK,CAAC;IACzBJ,UAAU,GAAGA,UAAU,CAACO,OAAO,CAACJ,KAAK,EAAEG,KAAK,CAAC;EAC/C,CAAC,CAAC;EACF,OAAOP,MAAM,GAAGC,UAAU,GAAGJ,OAAO;AACtC,CAAC;AACD,SAASb,OAAO,IAAIC,MAAM;AAC1B,IAAIwB,YAAY,GAAG;EACjBtB,QAAQ,EAAEJ,eAAe;EACzBE,MAAM,EAAE,SAASA,MAAMA,CAACC,OAAO,EAAE;IAC/B,OAAOF,OAAO,CAACE,OAAO,EAAEH,eAAe,CAAC;EAC1C;AACF,CAAC;AACD,OAAO,IAAI2B,cAAc,GAAG,aAAa5B,KAAK,CAAC6B,aAAa,CAACF,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}