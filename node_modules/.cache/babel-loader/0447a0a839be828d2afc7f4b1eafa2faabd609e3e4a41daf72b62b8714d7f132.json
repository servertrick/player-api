{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michaejo\\\\Documents\\\\GitRepos\\\\player-api\\\\src\\\\SketchfabViewer.js\",\n  _s = $RefreshSig$();\n// SketchfabViewer.js\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SketchfabViewer = ({\n  modelUid\n}) => {\n  _s();\n  const iframeRef = useRef(null);\n  const [apiInstance, setApiInstance] = useState(null);\n  useEffect(() => {\n    if (!iframeRef.current || !window.Sketchfab) return;\n    const client = new window.Sketchfab(iframeRef.current);\n    client.init(modelUid, {\n      success: function (api) {\n        api.start();\n        api.addEventListener('viewerready', function () {\n          console.log('Viewer is ready');\n          setApiInstance(api);\n        });\n      },\n      error: function () {\n        console.error('Sketchfab API error');\n      },\n      ui_infos: 0,\n      ui_controls: 1,\n      ui_stop: 0\n    });\n  }, [modelUid]);\n\n  // Example: Add annotation when API is ready\n  useEffect(() => {\n    if (!apiInstance) return;\n\n    // Add a custom annotation\n    apiInstance.createAnnotation({\n      position: [0, 0, 0],\n      // XYZ coordinates\n      title: 'My Annotation',\n      content: 'This is a custom annotation added via API.'\n    }, function (index) {\n      console.log('Annotation created at index:', index);\n    });\n  }, [apiInstance]);\n  return /*#__PURE__*/_jsxDEV(\"iframe\", {\n    ref: iframeRef,\n    title: \"Sketchfab Viewer\",\n    width: \"640\",\n    height: \"480\",\n    allow: \"autoplay; fullscreen; vr\",\n    style: {\n      border: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SketchfabViewer, \"yMXe6KfYNpOaIWDLvwBqhs8yAn4=\");\n_c = SketchfabViewer;\nexport default SketchfabViewer;\nvar _c;\n$RefreshReg$(_c, \"SketchfabViewer\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","SketchfabViewer","modelUid","_s","iframeRef","apiInstance","setApiInstance","current","window","Sketchfab","client","init","success","api","start","addEventListener","console","log","error","ui_infos","ui_controls","ui_stop","createAnnotation","position","title","content","index","ref","width","height","allow","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/michaejo/Documents/GitRepos/player-api/src/SketchfabViewer.js"],"sourcesContent":["// SketchfabViewer.js\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nconst SketchfabViewer = ({ modelUid }) => {\r\n  const iframeRef = useRef(null);\r\n  const [apiInstance, setApiInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!iframeRef.current || !window.Sketchfab) return;\r\n\r\n    const client = new window.Sketchfab(iframeRef.current);\r\n\r\n    client.init(modelUid, {\r\n      success: function(api) {\r\n        api.start();\r\n        api.addEventListener('viewerready', function() {\r\n          console.log('Viewer is ready');\r\n          setApiInstance(api);\r\n        });\r\n      },\r\n      error: function() {\r\n        console.error('Sketchfab API error');\r\n      },\r\n      ui_infos: 0,\r\n      ui_controls: 1,\r\n      ui_stop: 0,\r\n    });\r\n  }, [modelUid]);\r\n\r\n  // Example: Add annotation when API is ready\r\n  useEffect(() => {\r\n    if (!apiInstance) return;\r\n\r\n    // Add a custom annotation\r\n    apiInstance.createAnnotation(\r\n      {\r\n        position: [0, 0, 0], // XYZ coordinates\r\n        title: 'My Annotation',\r\n        content: 'This is a custom annotation added via API.',\r\n      },\r\n      function(index) {\r\n        console.log('Annotation created at index:', index);\r\n      }\r\n    );\r\n  }, [apiInstance]);\r\n\r\n  return (\r\n    <iframe\r\n      ref={iframeRef}\r\n      title=\"Sketchfab Viewer\"\r\n      width=\"640\"\r\n      height=\"480\"\r\n      allow=\"autoplay; fullscreen; vr\"\r\n      style={{ border: 'none' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SketchfabViewer;\r\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpDF,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,SAAS,CAACG,OAAO,IAAI,CAACC,MAAM,CAACC,SAAS,EAAE;IAE7C,MAAMC,MAAM,GAAG,IAAIF,MAAM,CAACC,SAAS,CAACL,SAAS,CAACG,OAAO,CAAC;IAEtDG,MAAM,CAACC,IAAI,CAACT,QAAQ,EAAE;MACpBU,OAAO,EAAE,SAAAA,CAASC,GAAG,EAAE;QACrBA,GAAG,CAACC,KAAK,CAAC,CAAC;QACXD,GAAG,CAACE,gBAAgB,CAAC,aAAa,EAAE,YAAW;UAC7CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAC9BX,cAAc,CAACO,GAAG,CAAC;QACrB,CAAC,CAAC;MACJ,CAAC;MACDK,KAAK,EAAE,SAAAA,CAAA,EAAW;QAChBF,OAAO,CAACE,KAAK,CAAC,qBAAqB,CAAC;MACtC,CAAC;MACDC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;;EAEd;EACAN,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,WAAW,EAAE;;IAElB;IACAA,WAAW,CAACiB,gBAAgB,CAC1B;MACEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MACrBC,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAE;IACX,CAAC,EACD,UAASC,KAAK,EAAE;MACdV,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAES,KAAK,CAAC;IACpD,CACF,CAAC;EACH,CAAC,EAAE,CAACrB,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA;IACE2B,GAAG,EAAEvB,SAAU;IACfoB,KAAK,EAAC,kBAAkB;IACxBI,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZC,KAAK,EAAC,0BAA0B;IAChCC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEN,CAAC;AAACjC,EAAA,CArDIF,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AAuDrB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}