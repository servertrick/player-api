{"ast":null,"code":"import React, { useContext, useMemo, useRef } from 'react';\n\n// When toggling aria-hidden values, we only want to affect elements\n// in the DOM that come from Grommet, so we track those elements in this\n// context value. We also only want `trapFocus` to apply to the most recently\n// opened Drop/Layer. See FocusedContainer.js\nexport var RootsContext = /*#__PURE__*/React.createContext(undefined);\nexport var useRoots = function useRoots() {\n  // If FocusedContainer is within Grommet React tree, there will be a value\n  // from RootsContext. If not, set up a default value that can be passed\n  // to drops that might open from within a drop.\n  var defaultRoots = useRef([]);\n  var defaultValue = useMemo(function () {\n    return {\n      roots: defaultRoots\n    };\n  }, []);\n  var existingRoots = useContext(RootsContext);\n  return {\n    contextValue: existingRoots || defaultValue,\n    hasRoots: (existingRoots == null ? void 0 : existingRoots.roots) !== undefined\n  };\n};","map":{"version":3,"names":["React","useContext","useMemo","useRef","RootsContext","createContext","undefined","useRoots","defaultRoots","defaultValue","roots","existingRoots","contextValue","hasRoots"],"sources":["C:/Users/michaejo/Documents/GitRepos/player-api/node_modules/grommet/es6/contexts/RootsContext.js"],"sourcesContent":["import React, { useContext, useMemo, useRef } from 'react';\n\n// When toggling aria-hidden values, we only want to affect elements\n// in the DOM that come from Grommet, so we track those elements in this\n// context value. We also only want `trapFocus` to apply to the most recently\n// opened Drop/Layer. See FocusedContainer.js\nexport var RootsContext = /*#__PURE__*/React.createContext(undefined);\nexport var useRoots = function useRoots() {\n  // If FocusedContainer is within Grommet React tree, there will be a value\n  // from RootsContext. If not, set up a default value that can be passed\n  // to drops that might open from within a drop.\n  var defaultRoots = useRef([]);\n  var defaultValue = useMemo(function () {\n    return {\n      roots: defaultRoots\n    };\n  }, []);\n  var existingRoots = useContext(RootsContext);\n  return {\n    contextValue: existingRoots || defaultValue,\n    hasRoots: (existingRoots == null ? void 0 : existingRoots.roots) !== undefined\n  };\n};"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;;AAE1D;AACA;AACA;AACA;AACA,OAAO,IAAIC,YAAY,GAAG,aAAaJ,KAAK,CAACK,aAAa,CAACC,SAAS,CAAC;AACrE,OAAO,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAAA,EAAG;EACxC;EACA;EACA;EACA,IAAIC,YAAY,GAAGL,MAAM,CAAC,EAAE,CAAC;EAC7B,IAAIM,YAAY,GAAGP,OAAO,CAAC,YAAY;IACrC,OAAO;MACLQ,KAAK,EAAEF;IACT,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,IAAIG,aAAa,GAAGV,UAAU,CAACG,YAAY,CAAC;EAC5C,OAAO;IACLQ,YAAY,EAAED,aAAa,IAAIF,YAAY;IAC3CI,QAAQ,EAAE,CAACF,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACD,KAAK,MAAMJ;EACvE,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}