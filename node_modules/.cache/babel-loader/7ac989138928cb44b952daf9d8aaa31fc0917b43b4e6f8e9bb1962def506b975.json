{"ast":null,"code":"import React from 'react';\nimport { AnnounceContextPropTypes } from './propTypes';\nvar DEFAULT_MODE = 'polite';\nvar invisibleChars = [\"\\u200B\", \"\\uFEFF\", \"\\u200C\", \"\\u200D\"];\nvar createAnnouncer = function createAnnouncer() {\n  var announcer = document.createElement('div');\n  announcer.id = 'grommet-announcer';\n  announcer.setAttribute('aria-live', DEFAULT_MODE);\n  announcer.setAttribute('aria-atomic', 'true');\n  announcer.style.left = '-100%';\n  announcer.style.right = '100%';\n  announcer.style.position = 'fixed';\n  announcer.style['z-index'] = '-1';\n  document.body.insertBefore(announcer, document.body.firstChild);\n  return announcer;\n};\nvar announceCounter = 0; // Counter to ensure unique announcements\nvar clearTimeoutId; // Variable to hold the timeout ID for clearing\n\nexport var AnnounceContext = /*#__PURE__*/React.createContext(function (message, mode, timeout) {\n  if (mode === void 0) {\n    mode = DEFAULT_MODE;\n  }\n  if (timeout === void 0) {\n    timeout = 500;\n  }\n  // we only create a new container if we don't have one already\n  // we create a separate node so that grommet does not set aria-hidden to it\n  var announcer = document.body.querySelector(\"#grommet-announcer[aria-live]\") || createAnnouncer();\n  announcer.setAttribute('aria-live', mode);\n\n  // Clear any existing timeout before setting a new one\n  if (clearTimeoutId) {\n    clearTimeout(clearTimeoutId);\n  }\n  if (mode === 'polite') {\n    // using setTimeout for polite mode pushes to next event loop tick,\n    // giving time for the browser to process the change\n    setTimeout(function () {\n      var uniqueChar = invisibleChars[announceCounter % invisibleChars.length];\n      announceCounter += 1; // Increment the counter for the next call\n      // set the message with a unique invisible character to ensure\n      // it is registered as different by screen readers\n      announcer.textContent = \"\" + message + uniqueChar;\n    }, 0);\n  } else announcer.textContent = message;\n\n  // clear the message after the specified timeout\n  clearTimeoutId = setTimeout(function () {\n    announcer.textContent = '';\n  }, timeout);\n});\nAnnounceContext.propTypes = AnnounceContextPropTypes;","map":{"version":3,"names":["React","AnnounceContextPropTypes","DEFAULT_MODE","invisibleChars","createAnnouncer","announcer","document","createElement","id","setAttribute","style","left","right","position","body","insertBefore","firstChild","announceCounter","clearTimeoutId","AnnounceContext","createContext","message","mode","timeout","querySelector","clearTimeout","setTimeout","uniqueChar","length","textContent","propTypes"],"sources":["C:/Users/michaejo/Documents/GitRepos/player-api/node_modules/grommet/es6/contexts/AnnounceContext/AnnounceContext.js"],"sourcesContent":["import React from 'react';\nimport { AnnounceContextPropTypes } from './propTypes';\nvar DEFAULT_MODE = 'polite';\nvar invisibleChars = [\"\\u200B\", \"\\uFEFF\", \"\\u200C\", \"\\u200D\"];\nvar createAnnouncer = function createAnnouncer() {\n  var announcer = document.createElement('div');\n  announcer.id = 'grommet-announcer';\n  announcer.setAttribute('aria-live', DEFAULT_MODE);\n  announcer.setAttribute('aria-atomic', 'true');\n  announcer.style.left = '-100%';\n  announcer.style.right = '100%';\n  announcer.style.position = 'fixed';\n  announcer.style['z-index'] = '-1';\n  document.body.insertBefore(announcer, document.body.firstChild);\n  return announcer;\n};\nvar announceCounter = 0; // Counter to ensure unique announcements\nvar clearTimeoutId; // Variable to hold the timeout ID for clearing\n\nexport var AnnounceContext = /*#__PURE__*/React.createContext(function (message, mode, timeout) {\n  if (mode === void 0) {\n    mode = DEFAULT_MODE;\n  }\n  if (timeout === void 0) {\n    timeout = 500;\n  }\n  // we only create a new container if we don't have one already\n  // we create a separate node so that grommet does not set aria-hidden to it\n  var announcer = document.body.querySelector(\"#grommet-announcer[aria-live]\") || createAnnouncer();\n  announcer.setAttribute('aria-live', mode);\n\n  // Clear any existing timeout before setting a new one\n  if (clearTimeoutId) {\n    clearTimeout(clearTimeoutId);\n  }\n  if (mode === 'polite') {\n    // using setTimeout for polite mode pushes to next event loop tick,\n    // giving time for the browser to process the change\n    setTimeout(function () {\n      var uniqueChar = invisibleChars[announceCounter % invisibleChars.length];\n      announceCounter += 1; // Increment the counter for the next call\n      // set the message with a unique invisible character to ensure\n      // it is registered as different by screen readers\n      announcer.textContent = \"\" + message + uniqueChar;\n    }, 0);\n  } else announcer.textContent = message;\n\n  // clear the message after the specified timeout\n  clearTimeoutId = setTimeout(function () {\n    announcer.textContent = '';\n  }, timeout);\n});\nAnnounceContext.propTypes = AnnounceContextPropTypes;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,aAAa;AACtD,IAAIC,YAAY,GAAG,QAAQ;AAC3B,IAAIC,cAAc,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAC7D,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAAA,EAAG;EAC/C,IAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC7CF,SAAS,CAACG,EAAE,GAAG,mBAAmB;EAClCH,SAAS,CAACI,YAAY,CAAC,WAAW,EAAEP,YAAY,CAAC;EACjDG,SAAS,CAACI,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;EAC7CJ,SAAS,CAACK,KAAK,CAACC,IAAI,GAAG,OAAO;EAC9BN,SAAS,CAACK,KAAK,CAACE,KAAK,GAAG,MAAM;EAC9BP,SAAS,CAACK,KAAK,CAACG,QAAQ,GAAG,OAAO;EAClCR,SAAS,CAACK,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI;EACjCJ,QAAQ,CAACQ,IAAI,CAACC,YAAY,CAACV,SAAS,EAAEC,QAAQ,CAACQ,IAAI,CAACE,UAAU,CAAC;EAC/D,OAAOX,SAAS;AAClB,CAAC;AACD,IAAIY,eAAe,GAAG,CAAC,CAAC,CAAC;AACzB,IAAIC,cAAc,CAAC,CAAC;;AAEpB,OAAO,IAAIC,eAAe,GAAG,aAAanB,KAAK,CAACoB,aAAa,CAAC,UAAUC,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAE;EAC9F,IAAID,IAAI,KAAK,KAAK,CAAC,EAAE;IACnBA,IAAI,GAAGpB,YAAY;EACrB;EACA,IAAIqB,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,GAAG;EACf;EACA;EACA;EACA,IAAIlB,SAAS,GAAGC,QAAQ,CAACQ,IAAI,CAACU,aAAa,CAAC,+BAA+B,CAAC,IAAIpB,eAAe,CAAC,CAAC;EACjGC,SAAS,CAACI,YAAY,CAAC,WAAW,EAAEa,IAAI,CAAC;;EAEzC;EACA,IAAIJ,cAAc,EAAE;IAClBO,YAAY,CAACP,cAAc,CAAC;EAC9B;EACA,IAAII,IAAI,KAAK,QAAQ,EAAE;IACrB;IACA;IACAI,UAAU,CAAC,YAAY;MACrB,IAAIC,UAAU,GAAGxB,cAAc,CAACc,eAAe,GAAGd,cAAc,CAACyB,MAAM,CAAC;MACxEX,eAAe,IAAI,CAAC,CAAC,CAAC;MACtB;MACA;MACAZ,SAAS,CAACwB,WAAW,GAAG,EAAE,GAAGR,OAAO,GAAGM,UAAU;IACnD,CAAC,EAAE,CAAC,CAAC;EACP,CAAC,MAAMtB,SAAS,CAACwB,WAAW,GAAGR,OAAO;;EAEtC;EACAH,cAAc,GAAGQ,UAAU,CAAC,YAAY;IACtCrB,SAAS,CAACwB,WAAW,GAAG,EAAE;EAC5B,CAAC,EAAEN,OAAO,CAAC;AACb,CAAC,CAAC;AACFJ,eAAe,CAACW,SAAS,GAAG7B,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}