{"ast":null,"code":"function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nimport React, { forwardRef, useMemo } from 'react';\nimport { edgeToNum } from '../../utils';\nimport { Box } from '../Box';\nimport { showInUnits } from './utils';\nvar onlyVerticalPad = function onlyVerticalPad(pad) {\n  var result;\n  if (pad) {\n    if (typeof pad === 'string') result = {\n      vertical: pad\n    };else result = {\n      vertical: pad.vertical,\n      top: pad.top,\n      bottom: pad.bottom\n    };\n  }\n  return result;\n};\nvar YAxis = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var values = _ref.values,\n    padProp = _ref.pad,\n    renderValue = _ref.renderValue,\n    serie = _ref.serie,\n    theme = _ref.theme,\n    thickness = _ref.thickness;\n  var _ref2 = serie || {},\n    render = _ref2.render,\n    suffix = _ref2.suffix;\n\n  // pad to the edge of the thickness, for when padding is more than half\n  // the thickness\n  var pad = useMemo(function () {\n    return padProp && thickness && {\n      top: edgeToNum(padProp.top || padProp.vertical, theme) - edgeToNum(thickness, theme) / 2 + \"px\",\n      bottom: edgeToNum(padProp.bottom || padProp.vertical, theme) - edgeToNum(thickness, theme) / 2 + \"px\"\n    } || onlyVerticalPad(padProp);\n  }, [padProp, theme, thickness]);\n\n  // When there are only labels at the end of the axis and there isn't\n  // much space for them, let them take as much space as they like\n  // flowing in from the edges.\n  // Otherwise, align their container to the\n  // data/guide lines and then let their content overflow that.\n  var labelContainerProps = useMemo(function () {\n    // 24px was chosen empirically as 48px is enough to show some simple text\n    var centered = values.length !== 2 || edgeToNum((padProp == null ? void 0 : padProp.start) || (padProp == null ? void 0 : padProp.horizontal), theme) >= 24;\n    if (centered) return {\n      basis: thickness || '1px',\n      overflow: 'visible',\n      justify: 'center'\n    };\n    return {};\n  }, [padProp, theme, thickness, values]);\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    gridArea: \"yAxis\",\n    justify: \"between\",\n    flex: true,\n    pad: pad\n  }, values.map(function (axisValue, i) {\n    var content = serie ? renderValue(serie, axisValue, true) : axisValue;\n    if (content === axisValue && !render && !suffix) {\n      var maxValue = Math.max.apply(Math, values.map(function (v) {\n        return Math.abs(v);\n      }));\n      content = showInUnits(content, maxValue);\n    }\n    return /*#__PURE__*/React.createElement(Box\n    // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      align: \"end\"\n    }, labelContainerProps), content);\n  }));\n});\nexport { YAxis };","map":{"version":3,"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","React","forwardRef","useMemo","edgeToNum","Box","showInUnits","onlyVerticalPad","pad","result","vertical","top","bottom","YAxis","_ref","ref","values","padProp","renderValue","serie","theme","thickness","_ref2","render","suffix","labelContainerProps","centered","start","horizontal","basis","overflow","justify","createElement","gridArea","flex","map","axisValue","i","content","maxValue","Math","max","v","abs","key","align"],"sources":["C:/Users/michaejo/Documents/GitRepos/player-api/node_modules/grommet/es6/components/DataChart/YAxis.js"],"sourcesContent":["function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport React, { forwardRef, useMemo } from 'react';\nimport { edgeToNum } from '../../utils';\nimport { Box } from '../Box';\nimport { showInUnits } from './utils';\nvar onlyVerticalPad = function onlyVerticalPad(pad) {\n  var result;\n  if (pad) {\n    if (typeof pad === 'string') result = {\n      vertical: pad\n    };else result = {\n      vertical: pad.vertical,\n      top: pad.top,\n      bottom: pad.bottom\n    };\n  }\n  return result;\n};\nvar YAxis = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var values = _ref.values,\n    padProp = _ref.pad,\n    renderValue = _ref.renderValue,\n    serie = _ref.serie,\n    theme = _ref.theme,\n    thickness = _ref.thickness;\n  var _ref2 = serie || {},\n    render = _ref2.render,\n    suffix = _ref2.suffix;\n\n  // pad to the edge of the thickness, for when padding is more than half\n  // the thickness\n  var pad = useMemo(function () {\n    return padProp && thickness && {\n      top: edgeToNum(padProp.top || padProp.vertical, theme) - edgeToNum(thickness, theme) / 2 + \"px\",\n      bottom: edgeToNum(padProp.bottom || padProp.vertical, theme) - edgeToNum(thickness, theme) / 2 + \"px\"\n    } || onlyVerticalPad(padProp);\n  }, [padProp, theme, thickness]);\n\n  // When there are only labels at the end of the axis and there isn't\n  // much space for them, let them take as much space as they like\n  // flowing in from the edges.\n  // Otherwise, align their container to the\n  // data/guide lines and then let their content overflow that.\n  var labelContainerProps = useMemo(function () {\n    // 24px was chosen empirically as 48px is enough to show some simple text\n    var centered = values.length !== 2 || edgeToNum((padProp == null ? void 0 : padProp.start) || (padProp == null ? void 0 : padProp.horizontal), theme) >= 24;\n    if (centered) return {\n      basis: thickness || '1px',\n      overflow: 'visible',\n      justify: 'center'\n    };\n    return {};\n  }, [padProp, theme, thickness, values]);\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    gridArea: \"yAxis\",\n    justify: \"between\",\n    flex: true,\n    pad: pad\n  }, values.map(function (axisValue, i) {\n    var content = serie ? renderValue(serie, axisValue, true) : axisValue;\n    if (content === axisValue && !render && !suffix) {\n      var maxValue = Math.max.apply(Math, values.map(function (v) {\n        return Math.abs(v);\n      }));\n      content = showInUnits(content, maxValue);\n    }\n    return /*#__PURE__*/React.createElement(Box\n    // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      align: \"end\"\n    }, labelContainerProps), content);\n  }));\n});\nexport { YAxis };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}