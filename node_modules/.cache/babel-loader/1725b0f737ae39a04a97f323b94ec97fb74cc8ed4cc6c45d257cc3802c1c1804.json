{"ast":null,"code":"import { css } from 'styled-components';\nimport { deepFreeze } from '../utils/object';\nimport { normalizeColor } from '../utils/colors';\nvar accentColors = ['#FD6FFF', '#60EB9F', '#60EBE1', '#FFCA58'];\nvar neutralColors = ['#EB6060', '#01C781', '#6095EB', '#FFB200'];\nvar statusColors = {\n  critical: '#FF3333',\n  error: '#FF3333',\n  warning: '#F7E464',\n  ok: '#7DD892',\n  unknown: '#a8a8a8',\n  disabled: '#a8a8a8'\n};\nvar backgroundColor = '#111111';\nvar colors = {\n  active: 'rgba(102, 102, 102, 0.5)',\n  background: backgroundColor,\n  black: '#000000',\n  brand: '#FD6FFF',\n  control: {\n    dark: '#FFCA58',\n    light: '#403216'\n  },\n  focus: '#FFCA58',\n  icon: {\n    dark: '#f8f8f8',\n    light: '#666666'\n  },\n  placeholder: '#AAAAAA',\n  text: {\n    dark: '#eeeeee',\n    light: '#444444'\n  },\n  white: '#FFFFFF'\n};\nvar colorArray = function colorArray(array, prefix) {\n  return array.forEach(function (color, index) {\n    colors[prefix + \"-\" + (index + 1)] = color;\n  });\n};\ncolorArray(accentColors, 'accent');\ncolorArray(neutralColors, 'neutral');\nObject.keys(statusColors).forEach(function (color) {\n  colors[\"status-\" + color] = statusColors[color];\n});\nexport var dark = deepFreeze({\n  global: {\n    colors: colors,\n    drop: {\n      background: '#333333'\n    },\n    focus: {\n      border: {\n        color: css([\"\", \";\"], function (props) {\n          return normalizeColor('focus', props.theme);\n        }),\n        width: '2px'\n      }\n    },\n    font: {\n      family: 'Arial'\n    },\n    input: {\n      weight: 700\n    }\n  },\n  anchor: {\n    color: 'control'\n  },\n  layer: {\n    background: backgroundColor,\n    overlay: {\n      background: 'rgba(48, 48, 48, 0.5)'\n    }\n  }\n});","map":{"version":3,"names":["css","deepFreeze","normalizeColor","accentColors","neutralColors","statusColors","critical","error","warning","ok","unknown","disabled","backgroundColor","colors","active","background","black","brand","control","dark","light","focus","icon","placeholder","text","white","colorArray","array","prefix","forEach","color","index","Object","keys","global","drop","border","props","theme","width","font","family","input","weight","anchor","layer","overlay"],"sources":["C:/Users/michaejo/Documents/GitRepos/player-api/node_modules/grommet/es6/themes/dark.js"],"sourcesContent":["import { css } from 'styled-components';\nimport { deepFreeze } from '../utils/object';\nimport { normalizeColor } from '../utils/colors';\nvar accentColors = ['#FD6FFF', '#60EB9F', '#60EBE1', '#FFCA58'];\nvar neutralColors = ['#EB6060', '#01C781', '#6095EB', '#FFB200'];\nvar statusColors = {\n  critical: '#FF3333',\n  error: '#FF3333',\n  warning: '#F7E464',\n  ok: '#7DD892',\n  unknown: '#a8a8a8',\n  disabled: '#a8a8a8'\n};\nvar backgroundColor = '#111111';\nvar colors = {\n  active: 'rgba(102, 102, 102, 0.5)',\n  background: backgroundColor,\n  black: '#000000',\n  brand: '#FD6FFF',\n  control: {\n    dark: '#FFCA58',\n    light: '#403216'\n  },\n  focus: '#FFCA58',\n  icon: {\n    dark: '#f8f8f8',\n    light: '#666666'\n  },\n  placeholder: '#AAAAAA',\n  text: {\n    dark: '#eeeeee',\n    light: '#444444'\n  },\n  white: '#FFFFFF'\n};\nvar colorArray = function colorArray(array, prefix) {\n  return array.forEach(function (color, index) {\n    colors[prefix + \"-\" + (index + 1)] = color;\n  });\n};\ncolorArray(accentColors, 'accent');\ncolorArray(neutralColors, 'neutral');\nObject.keys(statusColors).forEach(function (color) {\n  colors[\"status-\" + color] = statusColors[color];\n});\nexport var dark = deepFreeze({\n  global: {\n    colors: colors,\n    drop: {\n      background: '#333333'\n    },\n    focus: {\n      border: {\n        color: css([\"\", \";\"], function (props) {\n          return normalizeColor('focus', props.theme);\n        }),\n        width: '2px'\n      }\n    },\n    font: {\n      family: 'Arial'\n    },\n    input: {\n      weight: 700\n    }\n  },\n  anchor: {\n    color: 'control'\n  },\n  layer: {\n    background: backgroundColor,\n    overlay: {\n      background: 'rgba(48, 48, 48, 0.5)'\n    }\n  }\n});"],"mappings":"AAAA,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,cAAc,QAAQ,iBAAiB;AAChD,IAAIC,YAAY,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC/D,IAAIC,aAAa,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAChE,IAAIC,YAAY,GAAG;EACjBC,QAAQ,EAAE,SAAS;EACnBC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE,SAAS;EAClBC,EAAE,EAAE,SAAS;EACbC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE;AACZ,CAAC;AACD,IAAIC,eAAe,GAAG,SAAS;AAC/B,IAAIC,MAAM,GAAG;EACXC,MAAM,EAAE,0BAA0B;EAClCC,UAAU,EAAEH,eAAe;EAC3BI,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE;IACPC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE;EACT,CAAC;EACDC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE;IACJH,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE;EACT,CAAC;EACDG,WAAW,EAAE,SAAS;EACtBC,IAAI,EAAE;IACJL,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE;EACT,CAAC;EACDK,KAAK,EAAE;AACT,CAAC;AACD,IAAIC,UAAU,GAAG,SAASA,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAClD,OAAOD,KAAK,CAACE,OAAO,CAAC,UAAUC,KAAK,EAAEC,KAAK,EAAE;IAC3ClB,MAAM,CAACe,MAAM,GAAG,GAAG,IAAIG,KAAK,GAAG,CAAC,CAAC,CAAC,GAAGD,KAAK;EAC5C,CAAC,CAAC;AACJ,CAAC;AACDJ,UAAU,CAACvB,YAAY,EAAE,QAAQ,CAAC;AAClCuB,UAAU,CAACtB,aAAa,EAAE,SAAS,CAAC;AACpC4B,MAAM,CAACC,IAAI,CAAC5B,YAAY,CAAC,CAACwB,OAAO,CAAC,UAAUC,KAAK,EAAE;EACjDjB,MAAM,CAAC,SAAS,GAAGiB,KAAK,CAAC,GAAGzB,YAAY,CAACyB,KAAK,CAAC;AACjD,CAAC,CAAC;AACF,OAAO,IAAIX,IAAI,GAAGlB,UAAU,CAAC;EAC3BiC,MAAM,EAAE;IACNrB,MAAM,EAAEA,MAAM;IACdsB,IAAI,EAAE;MACJpB,UAAU,EAAE;IACd,CAAC;IACDM,KAAK,EAAE;MACLe,MAAM,EAAE;QACNN,KAAK,EAAE9B,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,UAAUqC,KAAK,EAAE;UACrC,OAAOnC,cAAc,CAAC,OAAO,EAAEmC,KAAK,CAACC,KAAK,CAAC;QAC7C,CAAC,CAAC;QACFC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,IAAI,EAAE;MACJC,MAAM,EAAE;IACV,CAAC;IACDC,KAAK,EAAE;MACLC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,MAAM,EAAE;IACNd,KAAK,EAAE;EACT,CAAC;EACDe,KAAK,EAAE;IACL9B,UAAU,EAAEH,eAAe;IAC3BkC,OAAO,EAAE;MACP/B,UAAU,EAAE;IACd;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}